{"ast":null,"code":"var _jsxFileName = \"/home/kemily/kemiflix/kemilyFlix/src/pages/cadastro/Categoria/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PageDefault from '../../../components/PageDefault';\nimport FormField from '../../../components/FormField';\nimport Button from '../../../components/Button';\nimport useForm from '../../../hooks/useForm';\n\nfunction CadastroCategoria() {\n  const valoresIniciais = {\n    nome: '',\n    descricao: '',\n    cor: ''\n  };\n  const {\n    handleChange,\n    values,\n    clearForm\n  } = useForm(valoresIniciais);\n  const [categorias, setCategorias] = useState([]);\n  useEffect(() => {\n    if (window.location.href.includes('localhost')) {\n      const URL = 'http://localhost:8080/categorias';\n      fetch(URL).then(async respostaDoServer => {\n        if (respostaDoServer.ok) {\n          const resposta = await respostaDoServer.json();\n          setCategorias(resposta);\n          return;\n        }\n\n        throw new Error('Não foi possível pegar os dados');\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(PageDefault, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Cadastro de Categoria:\", values.nome), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: function handleSubmit(infosDoEvento) {\n      infosDoEvento.preventDefault();\n      setCategorias([...categorias, values]);\n      clearForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Nome da Categoria\",\n    name: \"nome\",\n    value: values.nome,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormField, {\n    label: \"Descri\\xE7\\xE3o\",\n    type: \"textarea\",\n    name: \"descricao\",\n    value: values.descricao,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormField, {\n    label: \"Cor\",\n    type: \"color\",\n    name: \"cor\",\n    value: values.cor,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Cadastrar\")), categorias.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, categorias.map(categoria => /*#__PURE__*/React.createElement(\"li\", {\n    key: `${categoria.titulo}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, categoria.titulo))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Ir para home\"));\n}\n\nexport default CadastroCategoria;","map":{"version":3,"sources":["/home/kemily/kemiflix/kemilyFlix/src/pages/cadastro/Categoria/index.js"],"names":["React","useState","useEffect","Link","PageDefault","FormField","Button","useForm","CadastroCategoria","valoresIniciais","nome","descricao","cor","handleChange","values","clearForm","categorias","setCategorias","window","location","href","includes","URL","fetch","then","respostaDoServer","ok","resposta","json","Error","handleSubmit","infosDoEvento","preventDefault","length","map","categoria","titulo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,QAAMC,eAAe,GAAG;AACtBC,IAAAA,IAAI,EAAE,EADgB;AAEtBC,IAAAA,SAAS,EAAE,EAFW;AAGtBC,IAAAA,GAAG,EAAE;AAHiB,GAAxB;AAMA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAsCR,OAAO,CAACE,eAAD,CAAnD;AAEA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGgB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,WAA9B,CAAH,EAA+C;AAC7C,YAAMC,GAAG,GAAG,kCAAZ;AACAC,MAAAA,KAAK,CAACD,GAAD,CAAL,CACEE,IADF,CACO,MAAOC,gBAAP,IAA2B;AAChC,YAAGA,gBAAgB,CAACC,EAApB,EAAwB;AACtB,gBAAMC,QAAQ,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,EAAvB;AACAX,UAAAA,aAAa,CAACU,QAAD,CAAb;AACA;AACD;;AACD,cAAM,IAAIE,KAAJ,CAAU,iCAAV,CAAN;AACA,OARF;AASD;AACF,GAbQ,EAaN,EAbM,CAAT;AAgBA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEGf,MAAM,CAACJ,IAFV,CADF,eAME;AAAM,IAAA,QAAQ,EAAE,SAASoB,YAAT,CAAsBC,aAAtB,EAAqC;AACnDA,MAAAA,aAAa,CAACC,cAAd;AACAf,MAAAA,aAAa,CAAC,CACZ,GAAGD,UADS,EAEZF,MAFY,CAAD,CAAb;AAKAC,MAAAA,SAAS;AACV,KARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,mBADR;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAED,MAAM,CAACJ,IAHhB;AAIE,IAAA,QAAQ,EAAEG,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAkBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,KAAK,EAAEC,MAAM,CAACH,SAJhB;AAKE,IAAA,QAAQ,EAAEE,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,eA0BE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,KAAK,EAAEC,MAAM,CAACF,GAJhB;AAKE,IAAA,QAAQ,EAAEC,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,eAkCE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAlCF,CANF,EA6CGG,UAAU,CAACiB,MAAX,KAAsB,CAAtB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9CJ,eAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,UAAU,CAACkB,GAAX,CAAgBC,SAAD,iBACd;AAAI,IAAA,GAAG,EAAG,GAAEA,SAAS,CAACC,MAAO,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,CAACC,MADb,CADD,CADH,CApDF,eA4DE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5DF,CADF;AAkED;;AAED,eAAe5B,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PageDefault from '../../../components/PageDefault';\nimport FormField from '../../../components/FormField';\nimport Button from '../../../components/Button';\nimport useForm from '../../../hooks/useForm';\n\nfunction CadastroCategoria() {\n  const valoresIniciais = {\n    nome: '',\n    descricao: '',\n    cor: '',\n  };\n\n  const { handleChange, values, clearForm } = useForm(valoresIniciais);\n\n  const [categorias, setCategorias] = useState([]);\n\n  useEffect(() => {\n    if(window.location.href.includes('localhost')) {\n      const URL = 'http://localhost:8080/categorias'; \n      fetch(URL)\n       .then(async (respostaDoServer) =>{\n        if(respostaDoServer.ok) {\n          const resposta = await respostaDoServer.json();\n          setCategorias(resposta);\n          return; \n        }\n        throw new Error('Não foi possível pegar os dados');\n       })\n    }    \n  }, []);\n\n\n  return (\n    <PageDefault>\n      <h1>\n        Cadastro de Categoria:\n        {values.nome}\n      </h1>\n\n      <form onSubmit={function handleSubmit(infosDoEvento) {\n        infosDoEvento.preventDefault();\n        setCategorias([\n          ...categorias,\n          values,\n        ]);\n\n        clearForm();\n      }}\n      >\n\n        <FormField\n          label=\"Nome da Categoria\"\n          name=\"nome\"\n          value={values.nome}\n          onChange={handleChange}\n        />\n\n        <FormField\n          label=\"Descrição\"\n          type=\"textarea\"\n          name=\"descricao\"\n          value={values.descricao}\n          onChange={handleChange}\n        />\n\n        <FormField\n          label=\"Cor\"\n          type=\"color\"\n          name=\"cor\"\n          value={values.cor}\n          onChange={handleChange}\n        />\n\n        <Button>\n          Cadastrar\n        </Button>\n      </form>\n\n      {categorias.length === 0 && (\n        <div>\n          {/* Cargando... */}\n          Loading...\n        </div>\n      )}\n\n      <ul>\n        {categorias.map((categoria) => (\n          <li key={`${categoria.titulo}`}>\n            {categoria.titulo}\n          </li>\n        ))}\n      </ul>\n\n      <Link to=\"/\">\n        Ir para home\n      </Link>\n    </PageDefault>\n  );\n}\n\nexport default CadastroCategoria;"]},"metadata":{},"sourceType":"module"}