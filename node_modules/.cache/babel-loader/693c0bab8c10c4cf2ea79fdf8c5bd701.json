{"ast":null,"code":"var _jsxFileName = \"/home/kemily/kemiflix/kemilyFlix/src/components/FormField/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nconst FormFieldWrapper = styled.div`\n    position: relative;\n    textarea {\n        min-height: 150px;\n    }\n    input[type=\"color\"] {\n        padding-left: 56px;\n    }\n`;\nconst Label = styled.label``;\nLabel.Text = styled.span`\n    color: #E5E5E5;\n    height: 57px;\n    position: absolute; \n    top: 0;\n    left: 16px;\n    \n    display: flex;\n    align-items: center;\n    \n    transform-origin: 0% 0%;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 300;\n    \n    transition: .1s ease-in-out;\n`;\nconst Input = styled.input`\n    background: #53585D;\n    color: #F5F5F5;\n    display: block;\n    width: 96%;\n    height: 57px;\n    font-size: 18px;\n    outline: 0;\n    border: 0;\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid #53585D;\n    padding: 16px 16px;\n    margin-bottom: 45px;\n    resize: none;\n    border-radius: 4px;\n    transition: border-color .3s;\n    &:focus {\n    border-bottom-color: var(--primary);\n    }\n    &:focus:not([type='color']) + ${Label.Text} {\n    transform: scale(.6) translateY(-10px);\n    }\n    ${({\n  value\n}) => {\n  const hasValue = value.length > 0;\n  return hasValue && css`\n        &:not([type='color']) + ${Label.Text} {\n            transform: scale(.6) translateY(-10px);\n        }\n        `;\n}}\n`;\n\nfunction FormField({\n  label,\n  name,\n  type,\n  value,\n  onChange\n}) {\n  const fieldId = `id_${name}`;\n  const tag = type === \"textarea\" ? \"textarea\" : \"input\";\n  const hasValue = Boolean(value.length);\n  return /*#__PURE__*/React.createElement(FormFieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    as: tag,\n    type: type,\n    value: value,\n    name: name,\n    hasValue: hasValue,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label.Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, label, \":\")));\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {}\n};\nFormField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default FormField;","map":{"version":3,"sources":["/home/kemily/kemiflix/kemilyFlix/src/components/FormField/index.js"],"names":["React","PropTypes","styled","css","FormFieldWrapper","div","Label","label","Text","span","Input","input","value","hasValue","length","FormField","name","type","onChange","fieldId","tag","Boolean","defaultProps","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAI;;;;;;;;CAApC;AAUA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAM,EAA3B;AACAD,KAAK,CAACE,IAAN,GAAaN,MAAM,CAACO,IAAK;;;;;;;;;;;;;;;;CAAzB;AAkBA,MAAMC,KAAK,GAAGR,MAAM,CAACS,KAAM;;;;;;;;;;;;;;;;;;;oCAmBSL,KAAK,CAACE,IAAK;;;MAGzC,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAe;AACjB,QAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAhC;AACA,SAAOD,QAAQ,IAAIV,GAAI;kCACOG,KAAK,CAACE,IAAK;;;SADzC;AAKC,CACJ;CA9BD;;AAiCA,SAASO,SAAT,CAAmB;AAAER,EAAAA,KAAF;AAASS,EAAAA,IAAT;AAAeC,EAAAA,IAAf;AAAqBL,EAAAA,KAArB;AAA4BM,EAAAA;AAA5B,CAAnB,EAA0D;AACtD,QAAMC,OAAO,GAAI,MAAKH,IAAK,EAA3B;AACA,QAAMI,GAAG,GAAGH,IAAI,KAAK,UAAT,GAAsB,UAAtB,GAAiC,OAA7C;AACA,QAAMJ,QAAQ,GAAGQ,OAAO,CAACT,KAAK,CAACE,MAAP,CAAxB;AACA,sBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AACI,IAAA,EAAE,EAAEM,GADR;AAEI,IAAA,IAAI,EAAEH,IAFV;AAGI,IAAA,KAAK,EAAEL,KAHX;AAII,IAAA,IAAI,EAAEI,IAJV;AAKI,IAAA,QAAQ,EAAEH,QALd;AAMI,IAAA,QAAQ,EAAEK,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eASA,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KADL,MATA,CADJ,CADJ;AAkBH;;AAEDQ,SAAS,CAACO,YAAV,GAAyB;AACrBL,EAAAA,IAAI,EAAE,MADe;AAErBL,EAAAA,KAAK,EAAE,EAFc;AAGrBM,EAAAA,QAAQ,EAAE,MAAK,CAAE;AAHI,CAAzB;AAMAH,SAAS,CAACQ,SAAV,GAAsB;AAClBhB,EAAAA,KAAK,EAAEN,SAAS,CAACuB,MAAV,CAAiBC,UADN;AAElBT,EAAAA,IAAI,EAAEf,SAAS,CAACuB,MAAV,CAAiBC,UAFL;AAGlBR,EAAAA,IAAI,EAAEhB,SAAS,CAACuB,MAHE;AAIlBZ,EAAAA,KAAK,EAAEX,SAAS,CAACuB,MAJC;AAKlBN,EAAAA,QAAQ,EAAEjB,SAAS,CAACyB;AALF,CAAtB;AAQA,eAAeX,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport styled, { css } from 'styled-components';\n\nconst FormFieldWrapper = styled.div`\n    position: relative;\n    textarea {\n        min-height: 150px;\n    }\n    input[type=\"color\"] {\n        padding-left: 56px;\n    }\n`;\n\nconst Label = styled.label``;\nLabel.Text = styled.span`\n    color: #E5E5E5;\n    height: 57px;\n    position: absolute; \n    top: 0;\n    left: 16px;\n    \n    display: flex;\n    align-items: center;\n    \n    transform-origin: 0% 0%;\n    font-size: 18px;\n    font-style: normal;\n    font-weight: 300;\n    \n    transition: .1s ease-in-out;\n`;\n\nconst Input = styled.input`\n    background: #53585D;\n    color: #F5F5F5;\n    display: block;\n    width: 96%;\n    height: 57px;\n    font-size: 18px;\n    outline: 0;\n    border: 0;\n    border-top: 4px solid transparent;\n    border-bottom: 4px solid #53585D;\n    padding: 16px 16px;\n    margin-bottom: 45px;\n    resize: none;\n    border-radius: 4px;\n    transition: border-color .3s;\n    &:focus {\n    border-bottom-color: var(--primary);\n    }\n    &:focus:not([type='color']) + ${Label.Text} {\n    transform: scale(.6) translateY(-10px);\n    }\n    ${({ value }) => {\n    const hasValue = value.length > 0;\n    return hasValue && css`\n        &:not([type='color']) + ${Label.Text} {\n            transform: scale(.6) translateY(-10px);\n        }\n        `;\n    }\n}\n`;\n\nfunction FormField({ label, name, type, value, onChange}) {\n    const fieldId = `id_${name}`;\n    const tag = type === \"textarea\" ? \"textarea\":\"input\";\n    const hasValue = Boolean(value.length);\n    return (\n        <FormFieldWrapper>\n            <Label>\n            <Input\n                as={tag}\n                type={type}\n                value={value}\n                name={name}\n                hasValue={hasValue}\n                onChange={onChange}\n            />\n            <Label.Text>\n                {label}\n                :\n            </Label.Text>\n            </Label>\n      </FormFieldWrapper>\n    )\n}\n\nFormField.defaultProps = {\n    type: 'text',\n    value: '',\n    onChange: () =>{},\n};\n\nFormField.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired, \n    type: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default FormField;"]},"metadata":{},"sourceType":"module"}